<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="General.AppName" xml:space="preserve">
    <value>Risk Hunting App</value>
  </data>
  <data name="DescribeRisk.NavigationBar.Title" xml:space="preserve">
    <value>Describe Risk</value>
    <comment>Fuzzy</comment>
  </data>
  <data name="DescribeRisk.NavigationBar.Left" xml:space="preserve">
    <value>Our Previous Risks</value>
  </data>
  <data name="DescribeRisk.Form.Label.Author" xml:space="preserve">
    <value>Reported by</value>
  </data>
  <data name="DescribeRisk.Form.Label.AuthorFIN" xml:space="preserve">
    <value>FIN</value>
  </data>
  <data name="DescribeRisk.Form.Label.Required" xml:space="preserve">
    <value>required</value>
  </data>
  <data name="DescribeRisk.Form.Label.Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescribeRisk.Form.Label.IncidentCategory" xml:space="preserve">
    <value>Incident category</value>
  </data>
  <data name="DescribeRisk.Form.Label.PersonInvolved" xml:space="preserve">
    <value>Name of the person involved</value>
  </data>
  <data name="DescribeRisk.Form.Label.Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="DescribeRisk.Form.Label.Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="DescribeRisk.Form.Label.InjuryType" xml:space="preserve">
    <value>Type of (potential) injury</value>
  </data>
  <data name="DescribeRisk.Form.Label.DateOfIncident" xml:space="preserve">
    <value>Date of incident</value>
  </data>
  <data name="DescribeRisk.Form.Label.UploadPicture" xml:space="preserve">
    <value>Upload a picture</value>
  </data>
  <data name="DescribeRisk.Form.Button.UploadPicture" xml:space="preserve">
    <value>Press here to add, update or delete an image</value>
  </data>
  <data name="DescribeRisk.Form.Button.CreateIdeas" xml:space="preserve">
    <value>Create Ideas</value>
  </data>
  <data name="DescribeRisk.Form.Button.ClearForm" xml:space="preserve">
    <value>Clear form &amp; describe new risk</value>
  </data>
  <data name="DescribeRisk.Form.Button.DeleteRisk" xml:space="preserve">
    <value>Delete risk</value>
  </data>
  <data name="DescribeRisk.NavigationBar.Right" xml:space="preserve">
    <value>Create Ideas</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.IncidentCategory.UnsafeAct" xml:space="preserve">
    <value>Unsafe act</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.IncidentCategory.UnsafeCondition" xml:space="preserve">
    <value>Unsafe condition</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.IncidentCategory.NearMiss" xml:space="preserve">
    <value>Near miss</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.PedestalLine" xml:space="preserve">
    <value>Pedestal Line</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.CabLine" xml:space="preserve">
    <value>Cab Line</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.AfterPaint" xml:space="preserve">
    <value>After Paint (APM or Medical Line)</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.PrePaint" xml:space="preserve">
    <value>Pre-Paint</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.PaintFloor" xml:space="preserve">
    <value>Paint Floor</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.Agv" xml:space="preserve">
    <value>AGV</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.Warehouse" xml:space="preserve">
    <value>Warehouse</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.Maintenance" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.RoadTestCentre" xml:space="preserve">
    <value>Road Test Centre</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.SubAssembly" xml:space="preserve">
    <value>Sub Assembly</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.Department.Other" xml:space="preserve">
    <value>Other (Office/Plantwise)</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.InjuryType.Abrasions" xml:space="preserve">
    <value>Abrasions/Cuts/Laceration</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.InjuryType.Burns" xml:space="preserve">
    <value>Burns/Scalds</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.InjuryType.Contusion" xml:space="preserve">
    <value>Contusion/Crush/Concussion</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.InjuryType.ForeignBodies" xml:space="preserve">
    <value>Foreign Bodies</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.InjuryType.Fractures" xml:space="preserve">
    <value>Fractures/Dislocations</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.InjuryType.Hematoma" xml:space="preserve">
    <value>Hematoma/Bruise</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.InjuryType.Sprains" xml:space="preserve">
    <value>Sprains/Strains</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.InjuryType.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Jan" xml:space="preserve">
    <value>January</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Feb" xml:space="preserve">
    <value>February</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Mar" xml:space="preserve">
    <value>March</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Apr" xml:space="preserve">
    <value>April</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.May" xml:space="preserve">
    <value>May</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Jun" xml:space="preserve">
    <value>June</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Jul" xml:space="preserve">
    <value>July</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Aug" xml:space="preserve">
    <value>August</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Sep" xml:space="preserve">
    <value>September</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Oct" xml:space="preserve">
    <value>October</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Nov" xml:space="preserve">
    <value>November</value>
  </data>
  <data name="DescribeRisk.Form.DropDown.DateOfIncident.Dec" xml:space="preserve">
    <value>December</value>
  </data>
  <data name="DescribeRisk.Notification.Empty" xml:space="preserve">
    <value>One or more fields are empty - please fill out the required fields to continue.</value>
  </data>
  <data name="DescribeRisk.Notification.SuccessSubmit" xml:space="preserve">
    <value>Thank you for your safty imput. Your risk has been successfully submitted and uploaded to the database. To review the risk use the Our Previous Risks button.</value>
  </data>
  <data name="DescribeRisk.Notification.FailedSubmit" xml:space="preserve">
    <value>Your risk could not be uploaded to the database. Please try again later.</value>
  </data>
  <data name="DescribeRisk.Notification.FailedDelete" xml:space="preserve">
    <value>Your risk could not be removed from the database. Please try again later.</value>
  </data>
  <data name="DescribeRisk.Notification.SuccessDelete" xml:space="preserve">
    <value>Your risk has been successfully deleted and removed from the database</value>
  </data>
  <data name="DescribeRisk.Notification.EnterDescription" xml:space="preserve">
    <value>please enter a descriptoin of the risk encountered</value>
  </data>
  <data name="DescribeRisk.Form.Watermark.Author" xml:space="preserve">
    <value>Enter the name of the person reporting the risk</value>
  </data>
  <data name="DescribeRisk.Form.Watermark.AuthorFIN" xml:space="preserve">
    <value>Enter the FIN number of person riportin the risk</value>
  </data>
  <data name="DescribeRisk.Form.Watermark.Description" xml:space="preserve">
    <value>Enter the description of the risk using two or three sentences </value>
  </data>
  <data name="DescribeRisk.Form.Watermark.PersonInvolved" xml:space="preserve">
    <value>Enter the name of the person involved</value>
  </data>

</root>